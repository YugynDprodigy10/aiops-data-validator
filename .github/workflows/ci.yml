name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}   # allow 'from core...' and 'from validators...' imports

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install xmlschema lxml jsonschema jinja2 typer rich pydantic pytest pytest-cov
          fi
          # Safety net: ensure pytest-cov is present
          pip install pytest-cov

      - name: Show workspace tree (helpful for path issues)
        run: |
          echo "PWD=$(pwd)"
          ls -la
          echo "---- core ----";       ls -la core       || true
          echo "---- validators ----"; ls -la validators || true
          echo "---- schemas ----";    ls -la schemas    || true
          echo "---- examples ----";   ls -la examples   || true
          echo "---- tests ----";      ls -la tests      || true

      - name: Verify pytest + plugin
        run: |
          python -c "import pytest; print('pytest', pytest.__version__)"
          python -c "import pytest_cov; print('pytest-cov OK')"

      - name: Run tests with coverage
        run: |
          python -m pytest -q --maxfail=1 --disable-warnings \
            --cov=core --cov=validators --cov-report=xml

      - name: Upload coverage.xml as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.python-version }}   # unique per matrix job
          path: coverage.xml
          if-no-files-found: error

      # Optional: upload to Codecov (uncomment after adding CODECOV_TOKEN in repo secrets)
      # - name: Upload coverage to Codecov
      #   if: matrix.python-version == '3.11'
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.xml
      #     flags: unittests
      #     fail_ci_if_error: true
